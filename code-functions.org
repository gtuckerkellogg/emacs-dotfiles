
#+OPTIONS: toc:nil num:nil ^:nil
#+PROPERTY: header-args :tangle yes :eval yes :results silent

* A combined coding hook
A single hook holding those functions which should be run in *every*
code buffer.

We have a number of turn-on-* functions since it's advised that lambda
functions not go in hooks. Repeatedly evaling an add-to-list with a
hook value will repeatedly add it since there's no way to ensure that
a lambda doesn't already exist in the list.

#+begin_src emacs-lisp
  (defun gtk/pretty-lambdas ()
    (font-lock-add-keywords
     nil `(("(\\(lambda\\>\\)"
            (0 (progn (compose-region (match-beginning 1) (match-end 1)
                                      ,(make-char 'greek-iso8859-7 107))
                      nil))))))


  (defun gtk/local-column-number-mode ()
    (make-local-variable 'column-number-mode)
    (column-number-mode t))


  (defun gtk/local-comment-auto-fill ()
    (setq-local comment-auto-fill-only-comments t)
    (auto-fill-mode 1))

  (defun gtk/turn-on-save-place-mode ()
    (save-place-mode 1))

  (defun gtk/turn-on-whitespace ()
    (make-local-variable 'whitespace-mode)
    (whitespace-mode t))


#+end_src

#+begin_src emacs-lisp
  (add-hook 'gtk/prog-mode-hook 'gtk/local-column-number-mode)
  (add-hook 'gtk/prog-mode-hook 'gtk/local-comment-auto-fill)
  (add-hook 'gtk/prog-mode-hook 'gtk/turn-on-save-place-mode)
  (add-hook 'gtk/prog-mode-hook 'enable-paredit-mode)

  ;(add-hook 'gtk/prog-mode-hook 'enable-pa
#+end_src

#+begin_src emacs-lisp 
  (when (window-system)
    (add-hook 'gtk/prog-mode-hook 'gtk/pretty-lambdas))
#+end_src

#+begin_src emacs-lisp
    (defun gtk/run-prog-hook ()
      "Enable things that are convenient across all coding buffers."
      (run-hooks 'gtk/prog-mode-hook))
  (add-hook 'prog-mode-hook #'gtk/run-prog-hook)
#+end_src

